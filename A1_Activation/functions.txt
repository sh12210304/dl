#q1
import numpy as np
import matplotlib.pyplot as plt

def linear(x):
    return x

def sigmoid(x):
    return 1 / (1 + np.exp(-x))

def tanh(x):
    return np.tanh(x)

def relu(x):
    return np.maximum(0, x)

def softmax(x):
    # Softmax over vector x
    e_x = np.exp(x - np.max(x))  # for numerical stability
    return e_x / e_x.sum()

x = np.linspace(-5, 5, 100)

plt.figure(figsize=(10, 8))

plt.plot(x, linear(x), label='Linear')
plt.plot(x, sigmoid(x), label='Sigmoid')
plt.plot(x, tanh(x), label='Tanh')
plt.plot(x, relu(x), label='ReLU')


softmax_vals = softmax(x)
plt.plot(x, softmax_vals, label='Softmax')

plt.title('Activation Functions')
plt.xlabel('Input')
plt.ylabel('Output')
plt.legend()
plt.grid(True)
plt.show()
